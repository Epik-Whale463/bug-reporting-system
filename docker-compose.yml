version: '3.8'
services:
  backend:
    build: ./backend
    command: sh -c "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn backend.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
    expose:
      - "8000"
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://postgres:securepassword123@db:5432/bugtracker
      - DEBUG=False
      - ALLOWED_HOSTS=localhost,127.0.0.1,139.59.26.29
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://139.59.26.29
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - "3000"
    environment:
      - NEXT_PUBLIC_API_URL=/api
      - NODE_ENV=production
    depends_on:
      - backend

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=bugtracker
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=securepassword123
      - POSTGRES_HOST_AUTH_METHOD=trust
    expose:
      - "5432"
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
